@model IEnumerable<TMADLANGBAYAN1_Gym_Management.Models.Workout>

@{
	TMADLANGBAYAN1_Gym_Management.Models.Client client = (TMADLANGBAYAN1_Gym_Management.Models.Client)ViewBag.Client;
	<partial name="_ClientDetail" model="client" />
	ViewData["Title"] = ViewData["ControllerFriendlyName"];
}

<form asp-action="Index" method="get">
	<input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
	<input type="hidden" name="sortField" value="@ViewData["sortField"]" />
	<input type="hidden" name="ClientID" value="@client.ID" />
	<div class="form-horizontal">
		<button class="btn @(ViewData["Filtering"])" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
			Filter/Search @ViewData["numberFilters"]
		</button><br />
		<div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
			<div class="collapse card card-body bg-light" style="padding-top: 10px; padding-bottom: 5px;" id="collapseFilter">
				<div class="row">
					<div class="form-group col-md-4 ml-md-3">
						<label class="control-label">Select by Exercise:</label>
						@Html.DropDownList("ExerciseID", null, "All Exercises", htmlAttributes: new { @class = "form-control" })
					</div>
					<div class="form-group col-md-4 ml-md-3">
						<label class="control-label">Select by Instructor:</label>
						@Html.DropDownList("InstructorID", null, "All Instructors", htmlAttributes: new { @class = "form-control" })
					</div>
					<div class="form-group col-md-4">
						<label class="control-label">Search Notes:</label>
						@Html.TextBox("SearchString", null, new { @class = "form-control" })
					</div>
					<div class="form-group col-md-4 ml-md-3">
						<label for="startDate">Start Date:</label>
						<input type="datetime-local" id="startDate" name="startDate" class="form-control"
							   value="@ViewData["StartDate"]" />
					</div>
					<div class="form-group col-md-4 ml-md-3">
						<label for="endDate">End Date:</label>
						<input type="datetime-local" id="endDate" name="endDate" class="form-control"
							   value="@ViewData["EndDate"]" />
					</div>
					<div class="form-group col-md-4 align-self-end">
						<input type="submit" name="actionButton" value="Apply" class="btn btn-primary" />
						<a asp-action="Index" asp-route-ClientID="@client.ID">Clear</a>
					</div>
				</div>
			</div>
		</div>
		<div>
			<table class="table">
				<tr>
					<th>
						<input type="submit" name="actionButton" value="Workout" class="btn btn-link" />
					</th>
					<th>
						<input type="submit" name="actionButton" value="Instructor" class="btn btn-link" />
					</th>
					<th class="d-none d-xl-table-cell">
						<input type="submit" value="Notes" class="btn btn-toolbar" />
					</th>
					<th class="d-none d-xl-table-cell">
						<input type="submit" value="Exercises" class="btn btn-toolbar" />
					</th>
					<th>
						<a asp-controller="ClientWorkout" asp-action="Add"
						   asp-route-ClientID="@client.ID" asp-route-ClientName="@client.Summary">
							<span class="btn btn-success" data-bs-toggle="tooltip"
								  title="Add Workout"><strong>&#x271A; Add</strong></span>
						</a>
					</th>
				</tr>

				@foreach (var item in Model)
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.StartDateSummary)
							@Html.DisplayFor(modelItem => item.StartTimeSummary)
							<span class="break-word">
								(@Html.DisplayFor(modelItem => item.DurationSummary))
							</span>
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Instructor.FormalName)
						</td>
						<td class="d-none d-xl-table-cell">
							@{
								string[] noteWords = item.Notes.Split(' ');
								if (noteWords.Count() > 5)
								{
									<a class="" role="button" data-bs-toggle="collapse" href="#collapseSum@(item.ID)" aria-expanded="false" aria-controls="collapseSum@(item.ID)">
										@(string.Join(" ", noteWords.Take(5)) + "...")
									</a>
									<div class="collapse" id="collapseSum@(item.ID)">
										<div class="well">
											@(string.Join(" ", noteWords.Skip(5)))
										</div>
									</div>
								}
								else
								{
									@item.Notes
								}
							}
						</td>
						<td class="d-none d-xl-table-cell">
							@{
								int condCount = item.WorkoutExercises.Count;
								if (condCount > 0)
								{
									string firstCond = item.WorkoutExercises.FirstOrDefault().Exercise.Name;
									if (condCount > 1)
									{
										string condList = "";
										var c = item.WorkoutExercises.ToList();
										for (int i = 1; i < condCount; i++)//Skip the first because we have it already
										{
											condList += c[i].Exercise.Name + " <br />";
										}
										<a class="" role="button" data-bs-toggle="collapse" href="#collapseHistory@(item.ID)"
										   aria-expanded="false" aria-controls="collapseHistory@(item.ID)">
											@firstCond <span class="badge bg-info">@condCount</span>
										</a>
										<div class="collapse" id="collapseHistory@(item.ID)">
											@Html.Raw(condList)
										</div>
									}
									else
									{
										@firstCond
									}
								}
							}
						</td>
						<td>
							<a asp-controller="ClientWorkout" asp-action="Update" asp-route-id="@item.ID"
							   class="btn btn-sm btn-outline-primary" role="button"
							   data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
								&#x270D;
							</a>
							<a asp-controller="ClientWorkout" asp-action="Remove" asp-route-id="@item.ID"
							   class="btn btn-sm btn-outline-danger" role="button"
							   data-bs-toggle="tooltip" title="Delete @ViewData["ControllerFriendlyName"]">
								&#x274C;
							</a>
						</td>
					</tr>
				}
			</table>
		</div>
	</div>
	<partial name="_PagingNavBar" />
	<div>
		<a asp-action="Edit" asp-controller="Client" asp-route-id="@client.ID">Edit @client.Summary</a> |
		<a href='@ViewData["returnURL"]'>Back to Client List</a>
	</div>
</form>
@section Scripts {
	<script type="text/javascript">
		var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
		var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
				  return new bootstrap.Tooltip(tooltipTriggerEl)
		})
	</script>
}
